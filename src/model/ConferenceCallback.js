/**
 * FrankenSpec
 * Bandwidth's Frankensteined API Spec
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ConferenceCallback model module.
 * @module model/ConferenceCallback
 * @version 1.0.0
 */
class ConferenceCallback {
    /**
     * Constructs a new <code>ConferenceCallback</code>.
     * This object represents all possible fields that may be included in callbacks related to conference events
     * @alias module:model/ConferenceCallback
     */
    constructor() { 
        
        ConferenceCallback.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ConferenceCallback</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ConferenceCallback} obj Optional instance to populate.
     * @return {module:model/ConferenceCallback} The populated <code>ConferenceCallback</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ConferenceCallback();

            if (data.hasOwnProperty('conferenceId')) {
                obj['conferenceId'] = ApiClient.convertToType(data['conferenceId'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('eventType')) {
                obj['eventType'] = ApiClient.convertToType(data['eventType'], 'String');
            }
            if (data.hasOwnProperty('eventTime')) {
                obj['eventTime'] = ApiClient.convertToType(data['eventTime'], 'String');
            }
            if (data.hasOwnProperty('tag')) {
                obj['tag'] = ApiClient.convertToType(data['tag'], 'String');
            }
            if (data.hasOwnProperty('callId')) {
                obj['callId'] = ApiClient.convertToType(data['callId'], 'String');
            }
            if (data.hasOwnProperty('to')) {
                obj['to'] = ApiClient.convertToType(data['to'], 'String');
            }
            if (data.hasOwnProperty('from')) {
                obj['from'] = ApiClient.convertToType(data['from'], 'String');
            }
            if (data.hasOwnProperty('accountId')) {
                obj['accountId'] = ApiClient.convertToType(data['accountId'], 'String');
            }
            if (data.hasOwnProperty('recordingId')) {
                obj['recordingId'] = ApiClient.convertToType(data['recordingId'], 'String');
            }
            if (data.hasOwnProperty('channels')) {
                obj['channels'] = ApiClient.convertToType(data['channels'], 'Number');
            }
            if (data.hasOwnProperty('startTime')) {
                obj['startTime'] = ApiClient.convertToType(data['startTime'], 'String');
            }
            if (data.hasOwnProperty('endTime')) {
                obj['endTime'] = ApiClient.convertToType(data['endTime'], 'String');
            }
            if (data.hasOwnProperty('duration')) {
                obj['duration'] = ApiClient.convertToType(data['duration'], 'String');
            }
            if (data.hasOwnProperty('fileFormat')) {
                obj['fileFormat'] = ApiClient.convertToType(data['fileFormat'], 'String');
            }
            if (data.hasOwnProperty('mediaUrl')) {
                obj['mediaUrl'] = ApiClient.convertToType(data['mediaUrl'], 'String');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
        }
        return obj;
    }


}

/**
 * @member {String} conferenceId
 */
ConferenceCallback.prototype['conferenceId'] = undefined;

/**
 * @member {String} name
 */
ConferenceCallback.prototype['name'] = undefined;

/**
 * @member {String} eventType
 */
ConferenceCallback.prototype['eventType'] = undefined;

/**
 * @member {String} eventTime
 */
ConferenceCallback.prototype['eventTime'] = undefined;

/**
 * @member {String} tag
 */
ConferenceCallback.prototype['tag'] = undefined;

/**
 * @member {String} callId
 */
ConferenceCallback.prototype['callId'] = undefined;

/**
 * @member {String} to
 */
ConferenceCallback.prototype['to'] = undefined;

/**
 * @member {String} from
 */
ConferenceCallback.prototype['from'] = undefined;

/**
 * @member {String} accountId
 */
ConferenceCallback.prototype['accountId'] = undefined;

/**
 * @member {String} recordingId
 */
ConferenceCallback.prototype['recordingId'] = undefined;

/**
 * @member {Number} channels
 */
ConferenceCallback.prototype['channels'] = undefined;

/**
 * @member {String} startTime
 */
ConferenceCallback.prototype['startTime'] = undefined;

/**
 * @member {String} endTime
 */
ConferenceCallback.prototype['endTime'] = undefined;

/**
 * @member {String} duration
 */
ConferenceCallback.prototype['duration'] = undefined;

/**
 * @member {String} fileFormat
 */
ConferenceCallback.prototype['fileFormat'] = undefined;

/**
 * @member {String} mediaUrl
 */
ConferenceCallback.prototype['mediaUrl'] = undefined;

/**
 * @member {String} status
 */
ConferenceCallback.prototype['status'] = undefined;






export default ConferenceCallback;

