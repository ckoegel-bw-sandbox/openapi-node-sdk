/**
 * FrankenSpec
 * Bandwidth's Frankensteined API Spec
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import MachineDetectionConfiguration from './MachineDetectionConfiguration';

/**
 * The CreateCallRequest model module.
 * @module model/CreateCallRequest
 * @version 1.0.0
 */
class CreateCallRequest {
    /**
     * Constructs a new <code>CreateCallRequest</code>.
     * @alias module:model/CreateCallRequest
     * @param from {String} Format is E164
     * @param to {String} Format is E164 or SIP URI
     * @param answerUrl {String} 
     * @param applicationId {String} 
     */
    constructor(from, to, answerUrl, applicationId) { 
        
        CreateCallRequest.initialize(this, from, to, answerUrl, applicationId);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, from, to, answerUrl, applicationId) { 
        obj['from'] = from;
        obj['to'] = to;
        obj['answerUrl'] = answerUrl;
        obj['applicationId'] = applicationId;
    }

    /**
     * Constructs a <code>CreateCallRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateCallRequest} obj Optional instance to populate.
     * @return {module:model/CreateCallRequest} The populated <code>CreateCallRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateCallRequest();

            if (data.hasOwnProperty('from')) {
                obj['from'] = ApiClient.convertToType(data['from'], 'String');
            }
            if (data.hasOwnProperty('to')) {
                obj['to'] = ApiClient.convertToType(data['to'], 'String');
            }
            if (data.hasOwnProperty('uui')) {
                obj['uui'] = ApiClient.convertToType(data['uui'], 'String');
            }
            if (data.hasOwnProperty('callTimeout')) {
                obj['callTimeout'] = ApiClient.convertToType(data['callTimeout'], 'Number');
            }
            if (data.hasOwnProperty('callbackTimeout')) {
                obj['callbackTimeout'] = ApiClient.convertToType(data['callbackTimeout'], 'Number');
            }
            if (data.hasOwnProperty('answerUrl')) {
                obj['answerUrl'] = ApiClient.convertToType(data['answerUrl'], 'String');
            }
            if (data.hasOwnProperty('answerFallbackUrl')) {
                obj['answerFallbackUrl'] = ApiClient.convertToType(data['answerFallbackUrl'], 'String');
            }
            if (data.hasOwnProperty('username')) {
                obj['username'] = ApiClient.convertToType(data['username'], 'String');
            }
            if (data.hasOwnProperty('password')) {
                obj['password'] = ApiClient.convertToType(data['password'], 'String');
            }
            if (data.hasOwnProperty('fallbackUsername')) {
                obj['fallbackUsername'] = ApiClient.convertToType(data['fallbackUsername'], 'String');
            }
            if (data.hasOwnProperty('fallbackPassword')) {
                obj['fallbackPassword'] = ApiClient.convertToType(data['fallbackPassword'], 'String');
            }
            if (data.hasOwnProperty('answerMethod')) {
                obj['answerMethod'] = ApiClient.convertToType(data['answerMethod'], 'String');
            }
            if (data.hasOwnProperty('answerFallbackMethod')) {
                obj['answerFallbackMethod'] = ApiClient.convertToType(data['answerFallbackMethod'], 'String');
            }
            if (data.hasOwnProperty('disconnectUrl')) {
                obj['disconnectUrl'] = ApiClient.convertToType(data['disconnectUrl'], 'String');
            }
            if (data.hasOwnProperty('disconnectMethod')) {
                obj['disconnectMethod'] = ApiClient.convertToType(data['disconnectMethod'], 'String');
            }
            if (data.hasOwnProperty('tag')) {
                obj['tag'] = ApiClient.convertToType(data['tag'], 'String');
            }
            if (data.hasOwnProperty('applicationId')) {
                obj['applicationId'] = ApiClient.convertToType(data['applicationId'], 'String');
            }
            if (data.hasOwnProperty('machineDetection')) {
                obj['machineDetection'] = MachineDetectionConfiguration.constructFromObject(data['machineDetection']);
            }
        }
        return obj;
    }


}

/**
 * Format is E164
 * @member {String} from
 */
CreateCallRequest.prototype['from'] = undefined;

/**
 * Format is E164 or SIP URI
 * @member {String} to
 */
CreateCallRequest.prototype['to'] = undefined;

/**
 * A comma-separated list of 'User-To-User' headers to be sent in the INVITE when calling a SIP URI. Each value must end with an 'encoding' parameter as described in https://tools.ietf.org/html/rfc7433. Only 'jwt' and 'base64' encodings are allowed. The entire value cannot exceed 350 characters, including parameters and separators.
 * @member {String} uui
 */
CreateCallRequest.prototype['uui'] = undefined;

/**
 * @member {Number} callTimeout
 */
CreateCallRequest.prototype['callTimeout'] = undefined;

/**
 * @member {Number} callbackTimeout
 */
CreateCallRequest.prototype['callbackTimeout'] = undefined;

/**
 * @member {String} answerUrl
 */
CreateCallRequest.prototype['answerUrl'] = undefined;

/**
 * @member {String} answerFallbackUrl
 */
CreateCallRequest.prototype['answerFallbackUrl'] = undefined;

/**
 * @member {String} username
 */
CreateCallRequest.prototype['username'] = undefined;

/**
 * @member {String} password
 */
CreateCallRequest.prototype['password'] = undefined;

/**
 * @member {String} fallbackUsername
 */
CreateCallRequest.prototype['fallbackUsername'] = undefined;

/**
 * @member {String} fallbackPassword
 */
CreateCallRequest.prototype['fallbackPassword'] = undefined;

/**
 * @member {module:model/CreateCallRequest.AnswerMethodEnum} answerMethod
 */
CreateCallRequest.prototype['answerMethod'] = undefined;

/**
 * @member {module:model/CreateCallRequest.AnswerFallbackMethodEnum} answerFallbackMethod
 */
CreateCallRequest.prototype['answerFallbackMethod'] = undefined;

/**
 * @member {String} disconnectUrl
 */
CreateCallRequest.prototype['disconnectUrl'] = undefined;

/**
 * @member {module:model/CreateCallRequest.DisconnectMethodEnum} disconnectMethod
 */
CreateCallRequest.prototype['disconnectMethod'] = undefined;

/**
 * @member {String} tag
 */
CreateCallRequest.prototype['tag'] = undefined;

/**
 * @member {String} applicationId
 */
CreateCallRequest.prototype['applicationId'] = undefined;

/**
 * @member {module:model/MachineDetectionConfiguration} machineDetection
 */
CreateCallRequest.prototype['machineDetection'] = undefined;





/**
 * Allowed values for the <code>answerMethod</code> property.
 * @enum {String}
 * @readonly
 */
CreateCallRequest['AnswerMethodEnum'] = {

    /**
     * value: "POST"
     * @const
     */
    "POST": "POST",

    /**
     * value: "GET"
     * @const
     */
    "GET": "GET"
};


/**
 * Allowed values for the <code>answerFallbackMethod</code> property.
 * @enum {String}
 * @readonly
 */
CreateCallRequest['AnswerFallbackMethodEnum'] = {

    /**
     * value: "POST"
     * @const
     */
    "POST": "POST",

    /**
     * value: "GET"
     * @const
     */
    "GET": "GET"
};


/**
 * Allowed values for the <code>disconnectMethod</code> property.
 * @enum {String}
 * @readonly
 */
CreateCallRequest['DisconnectMethodEnum'] = {

    /**
     * value: "POST"
     * @const
     */
    "POST": "POST",

    /**
     * value: "GET"
     * @const
     */
    "GET": "GET"
};



export default CreateCallRequest;

