/**
 * FrankenSpec
 * Bandwidth's Frankensteined API Spec
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Diversion from './Diversion';
import Transcription from './Transcription';

/**
 * The CallCallback model module.
 * @module model/CallCallback
 * @version 1.0.0
 */
class CallCallback {
    /**
     * Constructs a new <code>CallCallback</code>.
     * This object represents all possible fields that may be included in callbacks related to call events, including events that come from BXML verbs
     * @alias module:model/CallCallback
     */
    constructor() { 
        
        CallCallback.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CallCallback</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CallCallback} obj Optional instance to populate.
     * @return {module:model/CallCallback} The populated <code>CallCallback</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CallCallback();

            if (data.hasOwnProperty('eventType')) {
                obj['eventType'] = ApiClient.convertToType(data['eventType'], 'String');
            }
            if (data.hasOwnProperty('eventTime')) {
                obj['eventTime'] = ApiClient.convertToType(data['eventTime'], 'String');
            }
            if (data.hasOwnProperty('accountId')) {
                obj['accountId'] = ApiClient.convertToType(data['accountId'], 'String');
            }
            if (data.hasOwnProperty('applicationId')) {
                obj['applicationId'] = ApiClient.convertToType(data['applicationId'], 'String');
            }
            if (data.hasOwnProperty('from')) {
                obj['from'] = ApiClient.convertToType(data['from'], 'String');
            }
            if (data.hasOwnProperty('to')) {
                obj['to'] = ApiClient.convertToType(data['to'], 'String');
            }
            if (data.hasOwnProperty('direction')) {
                obj['direction'] = ApiClient.convertToType(data['direction'], 'String');
            }
            if (data.hasOwnProperty('callId')) {
                obj['callId'] = ApiClient.convertToType(data['callId'], 'String');
            }
            if (data.hasOwnProperty('callUrl')) {
                obj['callUrl'] = ApiClient.convertToType(data['callUrl'], 'String');
            }
            if (data.hasOwnProperty('startTime')) {
                obj['startTime'] = ApiClient.convertToType(data['startTime'], 'String');
            }
            if (data.hasOwnProperty('answerTime')) {
                obj['answerTime'] = ApiClient.convertToType(data['answerTime'], 'String');
            }
            if (data.hasOwnProperty('transferCallerId')) {
                obj['transferCallerId'] = ApiClient.convertToType(data['transferCallerId'], 'String');
            }
            if (data.hasOwnProperty('transferTo')) {
                obj['transferTo'] = ApiClient.convertToType(data['transferTo'], 'String');
            }
            if (data.hasOwnProperty('cause')) {
                obj['cause'] = ApiClient.convertToType(data['cause'], 'String');
            }
            if (data.hasOwnProperty('errorMessage')) {
                obj['errorMessage'] = ApiClient.convertToType(data['errorMessage'], 'String');
            }
            if (data.hasOwnProperty('errorId')) {
                obj['errorId'] = ApiClient.convertToType(data['errorId'], 'String');
            }
            if (data.hasOwnProperty('endTime')) {
                obj['endTime'] = ApiClient.convertToType(data['endTime'], 'String');
            }
            if (data.hasOwnProperty('digit')) {
                obj['digit'] = ApiClient.convertToType(data['digit'], 'String');
            }
            if (data.hasOwnProperty('parentCallId')) {
                obj['parentCallId'] = ApiClient.convertToType(data['parentCallId'], 'String');
            }
            if (data.hasOwnProperty('recordingId')) {
                obj['recordingId'] = ApiClient.convertToType(data['recordingId'], 'String');
            }
            if (data.hasOwnProperty('duration')) {
                obj['duration'] = ApiClient.convertToType(data['duration'], 'String');
            }
            if (data.hasOwnProperty('fileFormat')) {
                obj['fileFormat'] = ApiClient.convertToType(data['fileFormat'], 'String');
            }
            if (data.hasOwnProperty('mediaUrl')) {
                obj['mediaUrl'] = ApiClient.convertToType(data['mediaUrl'], 'String');
            }
            if (data.hasOwnProperty('tag')) {
                obj['tag'] = ApiClient.convertToType(data['tag'], 'String');
            }
            if (data.hasOwnProperty('channels')) {
                obj['channels'] = ApiClient.convertToType(data['channels'], 'Number');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
            if (data.hasOwnProperty('digits')) {
                obj['digits'] = ApiClient.convertToType(data['digits'], 'String');
            }
            if (data.hasOwnProperty('terminatingDigit')) {
                obj['terminatingDigit'] = ApiClient.convertToType(data['terminatingDigit'], 'String');
            }
            if (data.hasOwnProperty('transcription')) {
                obj['transcription'] = Transcription.constructFromObject(data['transcription']);
            }
            if (data.hasOwnProperty('diversion')) {
                obj['diversion'] = Diversion.constructFromObject(data['diversion']);
            }
        }
        return obj;
    }


}

/**
 * @member {String} eventType
 */
CallCallback.prototype['eventType'] = undefined;

/**
 * @member {String} eventTime
 */
CallCallback.prototype['eventTime'] = undefined;

/**
 * @member {String} accountId
 */
CallCallback.prototype['accountId'] = undefined;

/**
 * @member {String} applicationId
 */
CallCallback.prototype['applicationId'] = undefined;

/**
 * @member {String} from
 */
CallCallback.prototype['from'] = undefined;

/**
 * @member {String} to
 */
CallCallback.prototype['to'] = undefined;

/**
 * @member {String} direction
 */
CallCallback.prototype['direction'] = undefined;

/**
 * @member {String} callId
 */
CallCallback.prototype['callId'] = undefined;

/**
 * @member {String} callUrl
 */
CallCallback.prototype['callUrl'] = undefined;

/**
 * @member {String} startTime
 */
CallCallback.prototype['startTime'] = undefined;

/**
 * @member {String} answerTime
 */
CallCallback.prototype['answerTime'] = undefined;

/**
 * @member {String} transferCallerId
 */
CallCallback.prototype['transferCallerId'] = undefined;

/**
 * @member {String} transferTo
 */
CallCallback.prototype['transferTo'] = undefined;

/**
 * @member {String} cause
 */
CallCallback.prototype['cause'] = undefined;

/**
 * @member {String} errorMessage
 */
CallCallback.prototype['errorMessage'] = undefined;

/**
 * @member {String} errorId
 */
CallCallback.prototype['errorId'] = undefined;

/**
 * @member {String} endTime
 */
CallCallback.prototype['endTime'] = undefined;

/**
 * @member {String} digit
 */
CallCallback.prototype['digit'] = undefined;

/**
 * @member {String} parentCallId
 */
CallCallback.prototype['parentCallId'] = undefined;

/**
 * @member {String} recordingId
 */
CallCallback.prototype['recordingId'] = undefined;

/**
 * @member {String} duration
 */
CallCallback.prototype['duration'] = undefined;

/**
 * @member {String} fileFormat
 */
CallCallback.prototype['fileFormat'] = undefined;

/**
 * @member {String} mediaUrl
 */
CallCallback.prototype['mediaUrl'] = undefined;

/**
 * @member {String} tag
 */
CallCallback.prototype['tag'] = undefined;

/**
 * @member {Number} channels
 */
CallCallback.prototype['channels'] = undefined;

/**
 * @member {String} status
 */
CallCallback.prototype['status'] = undefined;

/**
 * @member {String} digits
 */
CallCallback.prototype['digits'] = undefined;

/**
 * @member {String} terminatingDigit
 */
CallCallback.prototype['terminatingDigit'] = undefined;

/**
 * @member {module:model/Transcription} transcription
 */
CallCallback.prototype['transcription'] = undefined;

/**
 * @member {module:model/Diversion} diversion
 */
CallCallback.prototype['diversion'] = undefined;






export default CallCallback;

