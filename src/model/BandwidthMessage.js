/**
 * FrankenSpec
 * Bandwidth's Frankensteined API Spec
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The BandwidthMessage model module.
 * @module model/BandwidthMessage
 * @version 1.0.0
 */
class BandwidthMessage {
    /**
     * Constructs a new <code>BandwidthMessage</code>.
     * @alias module:model/BandwidthMessage
     */
    constructor() { 
        
        BandwidthMessage.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>BandwidthMessage</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/BandwidthMessage} obj Optional instance to populate.
     * @return {module:model/BandwidthMessage} The populated <code>BandwidthMessage</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new BandwidthMessage();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('owner')) {
                obj['owner'] = ApiClient.convertToType(data['owner'], 'String');
            }
            if (data.hasOwnProperty('applicationId')) {
                obj['applicationId'] = ApiClient.convertToType(data['applicationId'], 'String');
            }
            if (data.hasOwnProperty('time')) {
                obj['time'] = ApiClient.convertToType(data['time'], 'String');
            }
            if (data.hasOwnProperty('segmentCount')) {
                obj['segmentCount'] = ApiClient.convertToType(data['segmentCount'], 'Number');
            }
            if (data.hasOwnProperty('direction')) {
                obj['direction'] = ApiClient.convertToType(data['direction'], 'String');
            }
            if (data.hasOwnProperty('to')) {
                obj['to'] = ApiClient.convertToType(data['to'], ['String']);
            }
            if (data.hasOwnProperty('from')) {
                obj['from'] = ApiClient.convertToType(data['from'], 'String');
            }
            if (data.hasOwnProperty('media')) {
                obj['media'] = ApiClient.convertToType(data['media'], ['String']);
            }
            if (data.hasOwnProperty('text')) {
                obj['text'] = ApiClient.convertToType(data['text'], 'String');
            }
            if (data.hasOwnProperty('tag')) {
                obj['tag'] = ApiClient.convertToType(data['tag'], 'String');
            }
            if (data.hasOwnProperty('priority')) {
                obj['priority'] = ApiClient.convertToType(data['priority'], 'String');
            }
        }
        return obj;
    }


}

/**
 * The id of the message
 * @member {String} id
 */
BandwidthMessage.prototype['id'] = undefined;

/**
 * The Bandwidth phone number associated with the message
 * @member {String} owner
 */
BandwidthMessage.prototype['owner'] = undefined;

/**
 * The application ID associated with the message
 * @member {String} applicationId
 */
BandwidthMessage.prototype['applicationId'] = undefined;

/**
 * The datetime stamp of the message in ISO 8601
 * @member {String} time
 */
BandwidthMessage.prototype['time'] = undefined;

/**
 * The number of segments the original message from the user is broken into before sending over to carrier networks
 * @member {Number} segmentCount
 */
BandwidthMessage.prototype['segmentCount'] = undefined;

/**
 * The direction of the message relative to Bandwidth. Can be in or out
 * @member {String} direction
 */
BandwidthMessage.prototype['direction'] = undefined;

/**
 * The phone number recipients of the message
 * @member {Array.<String>} to
 */
BandwidthMessage.prototype['to'] = undefined;

/**
 * The phone number the message was sent from
 * @member {String} from
 */
BandwidthMessage.prototype['from'] = undefined;

/**
 * The list of media URLs sent in the message. Including a `filename` field in the `Content-Disposition` header of the media linked with a URL will set the displayed file name. This is a best practice to ensure that your media has a readable file name.
 * @member {Array.<String>} media
 */
BandwidthMessage.prototype['media'] = undefined;

/**
 * The contents of the message
 * @member {String} text
 */
BandwidthMessage.prototype['text'] = undefined;

/**
 * The custom string set by the user
 * @member {String} tag
 */
BandwidthMessage.prototype['tag'] = undefined;

/**
 * The priority specified by the user
 * @member {String} priority
 */
BandwidthMessage.prototype['priority'] = undefined;






export default BandwidthMessage;

