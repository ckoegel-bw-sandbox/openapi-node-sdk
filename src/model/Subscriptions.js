/**
 * FrankenSpec
 * Bandwidth's Frankensteined API Spec
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ParticipantSubscription from './ParticipantSubscription';

/**
 * The Subscriptions model module.
 * @module model/Subscriptions
 * @version 1.0.0
 */
class Subscriptions {
    /**
     * Constructs a new <code>Subscriptions</code>.
     * @alias module:model/Subscriptions
     * @param sessionId {String} Session the subscriptions are associated with  If this is the only field, the subscriber will be subscribed to all participants in the session (including any participants that are later added to the session) 
     */
    constructor(sessionId) { 
        
        Subscriptions.initialize(this, sessionId);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, sessionId) { 
        obj['sessionId'] = sessionId;
    }

    /**
     * Constructs a <code>Subscriptions</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Subscriptions} obj Optional instance to populate.
     * @return {module:model/Subscriptions} The populated <code>Subscriptions</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Subscriptions();

            if (data.hasOwnProperty('sessionId')) {
                obj['sessionId'] = ApiClient.convertToType(data['sessionId'], 'String');
            }
            if (data.hasOwnProperty('participants')) {
                obj['participants'] = ApiClient.convertToType(data['participants'], [ParticipantSubscription]);
            }
        }
        return obj;
    }


}

/**
 * Session the subscriptions are associated with  If this is the only field, the subscriber will be subscribed to all participants in the session (including any participants that are later added to the session) 
 * @member {String} sessionId
 */
Subscriptions.prototype['sessionId'] = undefined;

/**
 * Subset of participants to subscribe to in the session. Optional.
 * @member {Array.<module:model/ParticipantSubscription>} participants
 */
Subscriptions.prototype['participants'] = undefined;






export default Subscriptions;

